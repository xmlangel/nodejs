/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var Pack = require('./pack'),
    PackEnum = require('./packenum'),
    MapValue = require('../value/map-value'),
    FloatValue = require('../value/float-value'),
    DoubleValue = require('../value/double-value');

function ExtensionPack() {
    Pack.call(this);
    this.values = new MapValue();

    this.putString = function (key, value) {
        this.values.putString(key, value);
    };
    this.putInt = function (key, value) {
        this.values.putLong(key, Long.fromNumber(value));
    };
    this.putLong = function (key, value) {
        this.values.putLong(key, Long.fromNumber(value));
    };
    this.putFloat = function (key, value) {
        this.values.putValue(key, new FloatValue(value));
    };
    this.putDouble = function (key, value) {
        this.values.putValue(key, new DoubleValue(value));
    };
    this.putValue = function (key, value) {
        this.values.putValue(key, value);
    };
    this.putListValue = function (key, value) {
        this.values.putValue(key, value);
    };
    this.putMapValue = function (key, value) {
        this.values.putValue(key, value);
    };
    this.size = function () {
        return this.values.size();
    };
    this.clear = function() {
        this.values.clear();
    };
}

ExtensionPack.prototype = new Pack();
ExtensionPack.prototype.constructor = ExtensionPack;
ExtensionPack.prototype.getPackType = function () {
    return PackEnum.EXTENSION;
};
ExtensionPack.prototype.write = function (dout) {
    Pack.prototype.write.call(this, dout);
    dout.writeValue(this.values)
};
ExtensionPack.prototype.read = function(din) {
    Pack.prototype.read.call(this, din);
    var v = din.readValue();
    if(v instanceof MapValue) {
        this.value = v;
    }
    return this;
};
ExtensionPack.prototype.toString = function() {
    return "Extension " + Pack.prototype.toString.call(this) + " " + this.values;
};

module.exports = ExtensionPack;