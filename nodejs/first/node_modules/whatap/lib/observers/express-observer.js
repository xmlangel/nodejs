/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var TraceContextManager = require('../trace/trace-context-manager'),
    DataTextAgent       = require('../data/datatext-agent'),
    MessageStep         = require('../step/message-step'),
    HashUtil            = require('../util/hashutil'),
    Long                = require('long');

var ExpressObserver = function(agent){
    this.agent = agent;
    this.packages = ['express'];
};

ExpressObserver.prototype.inject = function( mod, moduleName ) {

    var self = this;
    if (mod.__whatap_observe__) return;
    mod.__whatap_observe__ = true;

    var aop = this.agent.aop;

    aop.before(mod.Router, 'use', function (obj, args) {
        var path = typeof args[0] === 'string' ? args[0] : '/',
            msg = 'Express',
            hash_middle = HashUtil.hashFromString(msg);

        DataTextAgent.MESSAGE.add(hash_middle, msg);
        if(args.length > 0) {
            var func = args[args.length - 1];
            var funcName = getFunctionName(func) || 'User defined function';
            self.agent.aop.functionHook(args, -1, function (obj, args) {
                var ctx = TraceContextManager.getCurrentContext();
                if(ctx == null) {
                    return;
                }

                if(funcName === 'router'){
                    ctx.error = Long.fromNumber(0);
                }

                var step = new MessageStep();
                step.hash = hash_middle;
                step.start_time = ctx.getElapsedTime();
                step.desc = funcName + ', path=\'' + path +'\'';
                ctx.profile.add(step);
            });
        }
    });

    aop.before(mod.Router, 'handle', function (obj, args) {
        TraceContextManager.resume(args[0].__ctx_id__);
    });
};

function getFunctionName(func) {
    var ret = func.toString();
    ret = ret.substr('function '.length);
    ret = ret.substr(0, ret.indexOf('('));
    return ret;
};

exports.ExpressObserver = ExpressObserver;