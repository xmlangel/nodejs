/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var TraceContextManager = require('../trace/trace-context-manager'),
    SocketStep           = require('../step/socket-step'),
    conf                = require('../conf/configure'),
    IPUtil              = require('../util/iputil'),
    Logger              = require('../logger');


var NetObserver = function(agent){
    this.agent = agent;
    this.packages = ['net'];
};

NetObserver.prototype.inject = function (mod, moduleName) {
    if(mod.__whatap_observe__) { return; }
    mod.__whatap_observe__ = true;

    var self = this;
    var aop = self.agent.aop;

    if (!conf.getProperty('trace_background_socket_enabled', true)) return;
    aop.both(mod.Socket.prototype, ['connect'],
        function (obj, args, lctx) {
            var ctx = lctx.context;
            if(ctx == null) return;
            ctx.stack.push('Socket connection');

            var info, host, port;
            if(args.length > 0){
                info = args[0];
                host = info.host;
                port = info.port;
            }
            var step = new SocketStep();
            step.start_time = ctx.getElapsedTime();
            step.ipaddr = new Buffer(IPUtil.toBytes(host));
            step.port = port;

            obj.on('lookup', function(err, ip, addressType){
                step.ipaddr = new Buffer(IPUtil.toBytes(ip));
            });

            lctx.step = step;
        },
        function (obj, args, ret, lctx) {
            var ctx = lctx.context;
            if(ctx == null) return;

            var step = lctx.step;
            step.elapsed = ctx.getElapsedTime() - step.start_time;
            ctx.profile.push(step);
            ctx.stack.pop();
        }
    );
};

exports.NetObserver = NetObserver;