/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

const WHATAP_R = "WHATAP";

var conf        = require('../conf/configure'),
    HashUtil    = require('./hashutil'),
    Hexa32      = require('./hexa32'),
    KeyGen      = require('./keygen'),
    Logger      = require('../logger');

var getUserId = function (req, res, defValue) {
    try {
        if (conf.user_header_ticket_enabled || false) {
            var ticket = req.headers[conf.user_header_ticket || ''];
            if (ticket != null && ticket.length() > 0) {
                return HashUtil.hash(ticket);
            }
        }
        var cookie = parseCookies(req);
        if (cookie != null) {
            var keys = Object.keys(cookie);
            if (keys.length >= (conf.trace_user_cookie_limit || 10000)) {
                return defValue;
            }
            var x1 = keys.indexOf(WHATAP_R);
            if (x1 >= 0) {
                var x2 = cookie[WHATAP_R];
                try {
                    return Hexa32.toLong32(x2);
                } catch (e) {
                    Logger.printError('WHATAP-192', 'UserIdUtil Error', e);
                }
            }
        }
        var expires= new Date(Date.now() + 86409000).toUTCString();
        var cookie_str = WHATAP_R + "=" + Hexa32.toString32(KeyGen.next()) + "; expires=" + expires;
        res.setHeader("Set-Cookie", cookie_str);
    } catch (e) {
        Logger.printError('WHATAP-193', 'UserIdUtil Error', e);
    }
    return 0;
};

function parseCookies (request) {
    var list = {},
        rc = request.headers.cookie;

    rc && rc.split(';').forEach(function( cookie ) {
        var parts = cookie.split('=');
        list[parts.shift().trim()] = decodeURI(parts.join('='));
    });
    return list;
}

var UserIdUtil = {
    getUserId : getUserId
};

module.exports = UserIdUtil;
