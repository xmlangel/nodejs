/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var Long = require('long');

var Hexa32 = function(){
};

Hexa32.toString32 = function(num /* long */){
    var minus = num < 0 ;
    if(minus){
        if(num == Long.MIN_VALUE ){
            return min;
        }
        return MINUS + (-num).toString(32);
    } else{
        if(num < 10){
            return num+'';
        }else{
            return PLUS + (num).toString(32);
        }
    }

}
Hexa32.toLong32 = function(str /* String */){
    if(str == null || str.length == 0) return 0;

    switch(str[0]){
        case MINUS:
            return Long.fromString( str.substring(1), true, 32).neg() ;
            break;

        case PLUS:
            return Long.fromString( str.substring(1), true, 32) ;
            break;

        default:
            return Number(str);
            break;
    }
};

var PLUS = Hexa32.PLUS = 'x';
var MINUS = Hexa32.MINUS = 'z';
var min = Hexa32.min = "z8000000000000";

module.exports = Hexa32;
