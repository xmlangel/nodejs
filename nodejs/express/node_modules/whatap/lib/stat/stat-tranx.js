/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var IntKeyLinkedMap     = require('../util/intkey-linkedmap'),
    ServiceRec          = require('../pack/statservice-pack').ServiceRec,
    StatServicePack     = require('../pack/statservice-pack').StatServicePack,
    DataPackSender      = require('../data/datapack-sender'),
    Long                = require('long');

const TABLE_MAX_SIZE = 5000;

function StatTranx() {
    if(typeof StatTranx.instance === 'object') {
        return StatTranx.instance;
    }

    this.table = new IntKeyLinkedMap(TABLE_MAX_SIZE + 1, 1).setMax(TABLE_MAX_SIZE);
    this.table.create = function (hash) {
        if(this.isFull()) {
            return null;
        }

        var rec = new ServiceRec();
        rec.setUrlHash(hash);
        rec.time_min = Number.MAX_VALUE;
        return rec;
    };

    StatTranx.instance = this;
}

StatTranx.prototype.getService = function (hash) {
    return this.table.intern(hash);
};
StatTranx.prototype.send = function (now) {
    if(this.table.size() == 0) {
        return;
    }

    var p = new StatServicePack().setRecords(this.table.size(), this.table.values());
    p.time = Long.fromNumber(now);
    this.table.clear();

    DataPackSender.sendStatServicePack(p);
};

module.exports = new StatTranx();