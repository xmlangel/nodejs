/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */

var conf                = require('../../conf/configure'),
    LongLongLinkedMap   = require('../../util/longlong-linkedmap'),
    HyperLogLog         = require('../../util/cardinality/hyperloglog'),
    Long                = require('long');

var add = function (userid) {
    if((userid instanceof Long && userid.toNumber() != 0) || userid !== 0) {
        meterUser.users.put(userid, Long.fromNumber(Date.now()));
    }
};

var getRealtimeUsers = function () {
    var max_think_time = conf.getProperty('realtime_user_thinktime_max', 300000);
    var now = Date.now();

    var loglog = new HyperLogLog();
    if(meterUser.users.size() == 0) {
        return loglog;
    }

    var en = meterUser.users.entries();
    while(en.hasMoreElements()) {
        var e = en.nextElement();
        if(now - e.getValue() > max_think_time) {
            meterUser.users.remove(e.getKey());
        } else {
            loglog.offer(e.getKey());
        }
    }

    return loglog;
};

var meterUser = {
    MAX_USERS : 70000,
    users : new LongLongLinkedMap(),
    add : add,
    getRealtimeUsers : getRealtimeUsers
};

module.exports = meterUser;