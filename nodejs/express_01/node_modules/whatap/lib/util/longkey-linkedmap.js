/**
 * Copyright 2016 the WHATAP project authors. All rights reserved.
 * Use of this source code is governed by a license that
 * can be found in the LICENSE file.
 */


var LinkedMap   = require('./linkedmap'),
    Long        = require('long');

function LongKeyLinkedMap(initCapacity, loadFactor){
    LinkedMap.call(this, initCapacity, loadFactor);
    return this;
}

LongKeyLinkedMap.prototype = new LinkedMap();
LongKeyLinkedMap.prototype.constructor = LongKeyLinkedMap;
LongKeyLinkedMap.prototype.put = function(key /*long*/, data /*Object*/){
    if((key instanceof Long) == false) {
        throw new Error('key must be Long object');
        return;
    }
    LinkedMap.prototype.put.call(this, key.toString(), data);
};
LongKeyLinkedMap.prototype.putLast = function(key, data){
    LinkedMap.prototype.putLast.call(this, key.toString(), data);
};
LongKeyLinkedMap.prototype.putFirst = function(key, data){
    LinkedMap.prototype.putFirst.call(this, key.toString(), data);
};
LongKeyLinkedMap.prototype.remove = function(key){
    LinkedMap.prototype.remove.call(this, key.toString());
};

module.exports = LongKeyLinkedMap;